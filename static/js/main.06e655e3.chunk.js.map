{"version":3,"sources":["TodoItem.js","TodoList.js","index.js"],"names":["TodoItem","props","description","onClick","onDone","TodoList","inputEl","useRef","useState","todoItems","setTodoItems","elements","i","item","elem","idx","newTodo","slice","removeTask","push","length","addTodoItem","newTodoList","concat","current","value","focus","onKeyDown","event","key","ref","type","ReactDOM","render","document","getElementById"],"mappings":"yKAIeA,MAJf,SAAkBC,GACd,OAAO,+BAAKA,EAAMC,YAAX,IAAwB,wBAAQC,QAASF,EAAMG,OAAvB,sB,OCqCpBC,MAnCf,WAUI,IATA,IAAMC,EAAUC,iBAAO,MACvB,EAAkCC,mBAAS,CAAC,WAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAOMC,EAAW,GATA,WAUTC,GACJ,IAAMC,EAAOJ,EAAUG,GACjBE,EAAO,cAAC,EAAD,CAAUV,OAAQ,kBARnC,SAAoBW,GAChB,IAAMC,EAAO,sBAAOP,EAAUQ,MAAM,EAAGF,IAA1B,YAAmCN,EAAUQ,MAAMF,EAAI,KACpEL,EAAaM,GAMwBE,CAAWN,IAAYV,YAAaW,GAAhBD,GACzDD,EAASQ,KAAKL,IAHVF,EAAI,EAAGA,EAAEH,EAAUW,OAAQR,IAAM,EAAjCA,GAMR,SAASS,IACL,IAAMC,EAAcb,EAAUc,OAAOjB,EAAQkB,QAAQC,OACrDnB,EAAQkB,QAAQC,MAAQ,GACxBf,EAAaY,GACbhB,EAAQkB,QAAQE,QASpB,OAAO,oCAAM,6BAAKf,IAClB,uBAAOgB,UARP,SAAmBC,GACE,UAAdA,EAAMC,KACLR,KAMqBS,IAAKxB,EAASyB,KAAK,SAChD,wBAAQ5B,QAASkB,EAAjB,qBC/BJW,IAASC,OAAO,qCAAE,6CAAoB,cAAC,EAAD,OAAiBC,SAASC,eAAe,W","file":"static/js/main.06e655e3.chunk.js","sourcesContent":["function TodoItem(props) {\n    return <li>{props.description} <button onClick={props.onDone}>Done</button></li>\n}\n\nexport default TodoItem;","import TodoItem from './TodoItem';\nimport {useState, useRef} from 'react';\n\nfunction TodoList () {\n    const inputEl = useRef(null);\n    const [todoItems, setTodoItems] = useState(['item 1']);\n\n    function removeTask(idx) {\n        const newTodo = [...todoItems.slice(0, idx), ...todoItems.slice(idx+1)]\n        setTodoItems(newTodo);\n    }\n\n    const elements = [];\n    for(let i = 0; i<todoItems.length; i++) {\n        const item = todoItems[i];\n        const elem = <TodoItem onDone={() => removeTask(i)} key={i} description={item} />;\n        elements.push(elem)\n    }\n\n    function addTodoItem() {\n        const newTodoList = todoItems.concat(inputEl.current.value);\n        inputEl.current.value = '';\n        setTodoItems(newTodoList);\n        inputEl.current.focus();\n    }\n    function onKeydown(event) {\n        if(event.key === 'Enter') {\n            addTodoItem();\n        }\n    }\n    // or:\n    // const elements = todolist.map((item) => <TodoItem description={item} /> );\n    return <div> <ul>{elements}</ul>\n    <input onKeyDown={onKeydown} ref={inputEl} type=\"text\"></input>\n    <button onClick={addTodoItem}>Add</button>\n    </div>;\n}\n\nexport default TodoList;","import ReactDOM from 'react-dom';\nimport TodoList from './TodoList';\n\nReactDOM.render(<><h1>React To Do</h1><TodoList /></>, document.getElementById('root'));"],"sourceRoot":""}